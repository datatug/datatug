package models2md

import (
	"fmt"
	"github.com/datatug/datatug/packages/models"
	"io"
	"strings"
)

// ProjectSummaryToReadme encodes project summary to markdown file format
func (encoder) ProjectSummaryToReadme(w io.Writer, project models.DataTugProject) error {
	dbModels := make([]string, len(project.DbModels))
	for i, dbModel := range project.DbModels {
		dbModels[i] = fmt.Sprintf("- [%v](dbmodels/%v)", dbModel.ID, dbModel.ID)
	}

	environments := make([]string, len(project.Environments))
	for i, environment := range project.Environments {
		environments[i] = fmt.Sprintf("- [%v](dbmodels/%v)", environment.ID, environment.ID)
	}

	boards := make([]string, len(project.Boards))
	for i, board := range project.Boards {
		boards[i] = fmt.Sprintf("- [%v](boards/%v)", board.Title, board.ID)
	}

	_, err := fmt.Fprintf(w, `# DataTug project: %v

## Project UUID
%v

## [Database models](dbmodels) - %v
%v

## [Environments](environments/) - %v
%v

## [Boards](boards/) - %v
%v

> Generated by [DataTug.app](https://datatug.app)
`,
		project.Title,
		project.ID,
		strings.Join(dbModels, "\n"), len(dbModels),
		strings.Join(environments, "\n"), len(environments),
		strings.Join(boards, "\n"), len(boards),
	)
	if err != nil {
		return err
	}
	return nil
}
