name: Test & Build

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - go.*
      - '**.go'
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/**
      - go.*
      - '**.go'

jobs:

  test_and_build:
    name: Lint, vet, test, build
    runs-on: ubuntu-latest

    steps:

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.16.0' # The Go version to download (if necessary) and use.

      - name: go version
        run: go version

      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout code
        uses: actions/checkout@v2

      #      - name: Pull new module version
      #        uses: andrewslotin/go-proxy-pull-action@master

      - name: go get
        run: go get ./...

      - name: go vet ./...
        run: go vet ./...

      - name: go test ./...
        run: go test ./...

      - name: Build DataTug CLI
        run: go build -mod=mod

#      - name: list root directory
#        run: ls

#  golangci:
#    # We recommend running this action in a job separate from other jobs (go test, etc) because different jobs run in parallel.
#    name: lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v2
#        with:
#          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
#          version: v1.29
#
#          # Optional: working directory, useful for monorepos
#          # working-directory: somedir
#
#          # Optional: golangci-lint command line arguments.
#          # args: --issues-exit-code=0
#
#          # Optional: show only new issues if it's a pull request. The default value is `false`.
#          # only-new-issues: true
#
#          # Optional: if set to true then the action will use pre-installed Go
#          # skip-go-installation: true
#
